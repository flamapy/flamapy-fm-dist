openapi: 3.0.0
info:
  title: FLAMAPY API
  description: FLAMAPY API, a Python-based AAFM API for feature models analysis.
  version: "1.0"
servers:
  - url: https://flamapy-api.onrender.com/
  - url: http://localhost:5000/
paths:
  /:
    get:
      summary: Returns a simple message
      description: Returns a simple message indicating that the FLAMAPY API is running and ready to use.
      tags:
        - Healthcheck
      responses:
        "200":
          description: A successful response
          content:
            text/plain:
              schema:
                type: string
                example: FLAMAPY API - V1 - Running and ready to use!
  
  /api/v1/info/plugins:
    get:
      summary: Returns a list of available plugins
      description: Returns a list of available plugins that can be used with the FLAMAPY API.
      tags:
        - Info
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example: ["plugin1", "plugin2", "plugin3"]
        "404":
          description: No plugins found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No plugins found
  /api/v1/info/{plugin}/operations:
    get:
      summary: Returns a list of available operations for a given plugin
      description: Returns a list of available operations that can be performed with the specified plugin.
      tags:
        - Info
      parameters:
        - in: path
          name: plugin
          description: The name of the plugin for which to retrieve operations
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example: ["operation1", "operation2", "operation3"]
        "404":
          description: No operations found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No operations found
  
  /api/v1/find/valid-products:
    post:
      summary: Find valid products
      tags:
        - Find
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid_products:
                    type: array
                    items:
                      type: object
                      properties:
                        product_id:
                          type: integer
                        product_name:
                          type: string
                        product_category:
                          type: string
                        product_price:
                          type: number
        '404':
          description: No valid products found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/find/core-features:
    post:
      summary: Find core features
      tags:
        - Find
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  core_features:
                    type: array
                    items:
                      type: object
                      properties:
                        feature_id:
                          type: integer
                        feature_name:
                          type: string
                        feature_type:
                          type: string
                        feature_description:
                          type: string
        '404':
          description: No core features found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/find/dead-features:
    post:
      summary: Find dead features
      tags:
        - Find
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  core_features:
                    type: array
                    items:
                      type: object
                      properties:
                        feature_id:
                          type: integer
                        feature_name:
                          type: string
                        feature_type:
                          type: string
                        feature_description:
                          type: string
        '404':
          description: No dead features found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/find/max-depth:
    post:
      summary: Find max depth of a tree
      tags:
        - Find
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  core_features:
                    type: array
                    items:
                      type: object
                      properties:
                        feature_id:
                          type: integer
                        feature_name:
                          type: string
                        feature_type:
                          type: string
                        feature_description:
                          type: string
        '404':
          description: No max depth found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/find/atomic-sets:
    post:
      summary: Find the atomic sets of a model
      tags:
        - Find
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  core_features:
                    type: array
                    items:
                      type: object
                      properties:
                        feature_id:
                          type: integer
                        feature_name:
                          type: string
                        feature_type:
                          type: string
                        feature_description:
                          type: string
        '404':
          description: No atomic sets found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/find/leaf-features:
    post:
      summary: Find leaf features
      tags:
        - Find
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  # define properties here based on the response
                  # from the `find_leaf_features()` function
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/count/valid-products:
    post:
      summary: Count valid products from uploaded model file.
      tags:
        - Count
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of valid products found in the model file.
                    example: 10
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: An error message indicating no valid products were found in the model file.
                    example: No valid products found
  /api/v1/count/leafs:
    post:
      summary: Count leafs in a model file
      tags:
        - Count
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of leafs found in the file
        '404':
          description: No leafs found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
  
  /api/v1/validate/model:
    post:
      summary: Validates a model file
      description: Validates an UVL model file and returns a result indicating if it is valid or not.
      tags:
        - Validate
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
      responses:
        "200":
          description: A successful response
          content:
            text/plain:
              schema:
                type: string
                example: Model is valid
        "404":
          description: File not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Model is not valid
  /api/v1/validate/product:
    post:
      summary: Validate product file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
                product:
                  type: string
                  format: binary
              required:
                - model
                - product
      responses:
        '200':
          description: Product is valid
        '404':
          description: Product is not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - Validate
  /api/v1/validate/configuration:
    post:
      summary: Validate configuration file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
                configuration:
                  type: string
                  format: binary
              required:
                - model
                - configuration
      responses:
        '200':
          description: Configuration is valid
        '404':
          description: Configuration is not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - Validate

  /api/v1/recommendations/:
    post:
      summary: Recommend products based on a query
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
                products:
                  type: string
                  format: binary
                query:
                  type: string
                  format: binary
              required:
                - model
                - products
                - query
      responses:
        '200':
          description: Recommendations are valid
        '404':
          description: Recommendations are not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - Recommendations
  /api/v1/recommendations/validate:
    post:
      summary: Check validity of recommendation objects
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
                products:
                  type: string
                  format: binary
                query:
                  type: string
                  format: binary
              required:
                - model
                - products
                - query
      responses:
        '200':
          description: Objects are valid
        '404':
          description: Objects are not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - Recommendations
  /api/v1/recommendations/analysis/restrictiveness:
    post:
      summary: Compute the restrictiveness of a feature list
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
                products:
                  type: string
                  format: binary
                features:
                  type: array
                  items:
                    type: string
              required:
                - model
                - products
                - features
      responses:
        '200':
          description: Restrictiveness %
        '404':
          description: Objects are not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - Recommendations
  /api/v1/recommendations/analysis/accessibility:
    post:
      summary: Compute the accessibility of a feature list
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
                products:
                  type: string
                  format: binary
              required:
                - model
                - products
      responses:
        '200':
          description: Accessibility %
        '404':
          description: Objects are not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - Recommendations
  /api/v1/recommendations/analysis/catalog:
    post:
      summary: Compute the catalog coverage of a recommender feature model
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
                products:
                  type: string
                  format: binary
              required:
                - model
                - products
      responses:
        '200':
          description: Catalog Coverage %
        '404':
          description: Objects are not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - Recommendations
  /api/v1/recommendations/analysis/visibility:
    post:
      summary: Compute the visibility of a product in a recommender feature model
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
                products:
                  type: string
                  format: binary
                product:
                  type: string
              required:
                - model
                - products
                - product
      responses:
        '200':
          description: Visibility %
        '404':
          description: Objects are not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - Recommendations
  /api/v1/recommendations/analysis/controversy:
    post:
      summary: Compute the controversy of a feature in a recommender feature model
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
                products:
                  type: string
                  format: binary
                features:
                  type: array
                  items:
                    type: string
              required:
                - model
                - products
                - features
      responses:
        '200':
          description: Controversy %
        '404':
          description: Objects are not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - Recommendations
  /api/v1/recommendations/analysis/global-controversy:
    post:
      summary: Compute the global controversy in a recommender feature model
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
                products:
                  type: string
                  format: binary
              required:
                - model
                - products
      responses:
        '200':
          description: Global controversy %
        '404':
          description: Objects are not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - Recommendations